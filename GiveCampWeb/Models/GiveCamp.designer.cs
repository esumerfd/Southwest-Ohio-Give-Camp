#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GiveCampWeb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SQL2008_731334_givecamp")]
	public partial class GiveCampDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertVolunteerTechnology(VolunteerTechnology instance);
    partial void UpdateVolunteerTechnology(VolunteerTechnology instance);
    partial void DeleteVolunteerTechnology(VolunteerTechnology instance);
    partial void InsertCharityRequirementSupportSkill(CharityRequirementSupportSkill instance);
    partial void UpdateCharityRequirementSupportSkill(CharityRequirementSupportSkill instance);
    partial void DeleteCharityRequirementSupportSkill(CharityRequirementSupportSkill instance);
    partial void InsertCharityRequirementTechnologiesUsed(CharityRequirementTechnologiesUsed instance);
    partial void UpdateCharityRequirementTechnologiesUsed(CharityRequirementTechnologiesUsed instance);
    partial void DeleteCharityRequirementTechnologiesUsed(CharityRequirementTechnologiesUsed instance);
    partial void InsertExperienceLevel(ExperienceLevel instance);
    partial void UpdateExperienceLevel(ExperienceLevel instance);
    partial void DeleteExperienceLevel(ExperienceLevel instance);
    partial void InsertJobRole(JobRole instance);
    partial void UpdateJobRole(JobRole instance);
    partial void DeleteJobRole(JobRole instance);
    partial void InsertTechnology(Technology instance);
    partial void UpdateTechnology(Technology instance);
    partial void DeleteTechnology(Technology instance);
    partial void InsertVolunteerJobRole(VolunteerJobRole instance);
    partial void UpdateVolunteerJobRole(VolunteerJobRole instance);
    partial void DeleteVolunteerJobRole(VolunteerJobRole instance);
    partial void InsertVolunteer(Volunteer instance);
    partial void UpdateVolunteer(Volunteer instance);
    partial void DeleteVolunteer(Volunteer instance);
    partial void InsertCharityRequirement(CharityRequirement instance);
    partial void UpdateCharityRequirement(CharityRequirement instance);
    partial void DeleteCharityRequirement(CharityRequirement instance);
    #endregion
		
		public GiveCampDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GIVECAMPConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GiveCampDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GiveCampDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GiveCampDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GiveCampDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VolunteerTechnology> VolunteerTechnologies
		{
			get
			{
				return this.GetTable<VolunteerTechnology>();
			}
		}
		
		public System.Data.Linq.Table<CharityRequirementSupportSkill> CharityRequirementSupportSkills
		{
			get
			{
				return this.GetTable<CharityRequirementSupportSkill>();
			}
		}
		
		public System.Data.Linq.Table<CharityRequirementTechnologiesUsed> CharityRequirementTechnologiesUseds
		{
			get
			{
				return this.GetTable<CharityRequirementTechnologiesUsed>();
			}
		}
		
		public System.Data.Linq.Table<ExperienceLevel> ExperienceLevels
		{
			get
			{
				return this.GetTable<ExperienceLevel>();
			}
		}
		
		public System.Data.Linq.Table<JobRole> JobRoles
		{
			get
			{
				return this.GetTable<JobRole>();
			}
		}
		
		public System.Data.Linq.Table<Technology> Technologies
		{
			get
			{
				return this.GetTable<Technology>();
			}
		}
		
		public System.Data.Linq.Table<VolunteerJobRole> VolunteerJobRoles
		{
			get
			{
				return this.GetTable<VolunteerJobRole>();
			}
		}
		
		public System.Data.Linq.Table<Volunteer> Volunteers
		{
			get
			{
				return this.GetTable<Volunteer>();
			}
		}
		
		public System.Data.Linq.Table<CharityRequirement> CharityRequirements
		{
			get
			{
				return this.GetTable<CharityRequirement>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VolunteerTechnologies")]
	public partial class VolunteerTechnology : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VolunteerID;
		
		private int _TechnologyID;
		
		private EntityRef<Technology> _Technology;
		
		private EntityRef<Volunteer> _Volunteer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVolunteerIDChanging(int value);
    partial void OnVolunteerIDChanged();
    partial void OnTechnologyIDChanging(int value);
    partial void OnTechnologyIDChanged();
    #endregion
		
		public VolunteerTechnology()
		{
			this._Technology = default(EntityRef<Technology>);
			this._Volunteer = default(EntityRef<Volunteer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolunteerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VolunteerID
		{
			get
			{
				return this._VolunteerID;
			}
			set
			{
				if ((this._VolunteerID != value))
				{
					if (this._Volunteer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVolunteerIDChanging(value);
					this.SendPropertyChanging();
					this._VolunteerID = value;
					this.SendPropertyChanged("VolunteerID");
					this.OnVolunteerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnologyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TechnologyID
		{
			get
			{
				return this._TechnologyID;
			}
			set
			{
				if ((this._TechnologyID != value))
				{
					if (this._Technology.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnologyIDChanging(value);
					this.SendPropertyChanging();
					this._TechnologyID = value;
					this.SendPropertyChanged("TechnologyID");
					this.OnTechnologyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technology_VolunteerTechnology", Storage="_Technology", ThisKey="TechnologyID", OtherKey="TechnologyID", IsForeignKey=true)]
		public Technology Technology
		{
			get
			{
				return this._Technology.Entity;
			}
			set
			{
				Technology previousValue = this._Technology.Entity;
				if (((previousValue != value) 
							|| (this._Technology.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technology.Entity = null;
						previousValue.VolunteerTechnologies.Remove(this);
					}
					this._Technology.Entity = value;
					if ((value != null))
					{
						value.VolunteerTechnologies.Add(this);
						this._TechnologyID = value.TechnologyID;
					}
					else
					{
						this._TechnologyID = default(int);
					}
					this.SendPropertyChanged("Technology");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_VolunteerTechnology", Storage="_Volunteer", ThisKey="VolunteerID", OtherKey="VolunteerID", IsForeignKey=true)]
		public Volunteer Volunteer
		{
			get
			{
				return this._Volunteer.Entity;
			}
			set
			{
				Volunteer previousValue = this._Volunteer.Entity;
				if (((previousValue != value) 
							|| (this._Volunteer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Volunteer.Entity = null;
						previousValue.VolunteerTechnologies.Remove(this);
					}
					this._Volunteer.Entity = value;
					if ((value != null))
					{
						value.VolunteerTechnologies.Add(this);
						this._VolunteerID = value.VolunteerID;
					}
					else
					{
						this._VolunteerID = default(int);
					}
					this.SendPropertyChanged("Volunteer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CharityRequirementSupportSkills")]
	public partial class CharityRequirementSupportSkill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CharityRequirementId;
		
		private int _TechnologyId;
		
		private EntityRef<Technology> _Technology;
		
		private EntityRef<CharityRequirement> _CharityRequirement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCharityRequirementIdChanging(int value);
    partial void OnCharityRequirementIdChanged();
    partial void OnTechnologyIdChanging(int value);
    partial void OnTechnologyIdChanged();
    #endregion
		
		public CharityRequirementSupportSkill()
		{
			this._Technology = default(EntityRef<Technology>);
			this._CharityRequirement = default(EntityRef<CharityRequirement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharityRequirementId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CharityRequirementId
		{
			get
			{
				return this._CharityRequirementId;
			}
			set
			{
				if ((this._CharityRequirementId != value))
				{
					if (this._CharityRequirement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCharityRequirementIdChanging(value);
					this.SendPropertyChanging();
					this._CharityRequirementId = value;
					this.SendPropertyChanged("CharityRequirementId");
					this.OnCharityRequirementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnologyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TechnologyId
		{
			get
			{
				return this._TechnologyId;
			}
			set
			{
				if ((this._TechnologyId != value))
				{
					if (this._Technology.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnologyIdChanging(value);
					this.SendPropertyChanging();
					this._TechnologyId = value;
					this.SendPropertyChanged("TechnologyId");
					this.OnTechnologyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technology_CharityRequirementSupportSkill", Storage="_Technology", ThisKey="TechnologyId", OtherKey="TechnologyID", IsForeignKey=true)]
		public Technology Technology
		{
			get
			{
				return this._Technology.Entity;
			}
			set
			{
				Technology previousValue = this._Technology.Entity;
				if (((previousValue != value) 
							|| (this._Technology.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technology.Entity = null;
						previousValue.CharityRequirementSupportSkills.Remove(this);
					}
					this._Technology.Entity = value;
					if ((value != null))
					{
						value.CharityRequirementSupportSkills.Add(this);
						this._TechnologyId = value.TechnologyID;
					}
					else
					{
						this._TechnologyId = default(int);
					}
					this.SendPropertyChanged("Technology");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CharityRequirement_CharityRequirementSupportSkill", Storage="_CharityRequirement", ThisKey="CharityRequirementId", OtherKey="CharityRequirementId", IsForeignKey=true)]
		public CharityRequirement CharityRequirement
		{
			get
			{
				return this._CharityRequirement.Entity;
			}
			set
			{
				CharityRequirement previousValue = this._CharityRequirement.Entity;
				if (((previousValue != value) 
							|| (this._CharityRequirement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CharityRequirement.Entity = null;
						previousValue.CharityRequirementSupportSkills.Remove(this);
					}
					this._CharityRequirement.Entity = value;
					if ((value != null))
					{
						value.CharityRequirementSupportSkills.Add(this);
						this._CharityRequirementId = value.CharityRequirementId;
					}
					else
					{
						this._CharityRequirementId = default(int);
					}
					this.SendPropertyChanged("CharityRequirement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CharityRequirementTechnologiesUsed")]
	public partial class CharityRequirementTechnologiesUsed : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CharityRequirementId;
		
		private int _TechnologyId;
		
		private EntityRef<Technology> _Technology;
		
		private EntityRef<CharityRequirement> _CharityRequirement;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCharityRequirementIdChanging(int value);
    partial void OnCharityRequirementIdChanged();
    partial void OnTechnologyIdChanging(int value);
    partial void OnTechnologyIdChanged();
    #endregion
		
		public CharityRequirementTechnologiesUsed()
		{
			this._Technology = default(EntityRef<Technology>);
			this._CharityRequirement = default(EntityRef<CharityRequirement>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharityRequirementId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CharityRequirementId
		{
			get
			{
				return this._CharityRequirementId;
			}
			set
			{
				if ((this._CharityRequirementId != value))
				{
					if (this._CharityRequirement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCharityRequirementIdChanging(value);
					this.SendPropertyChanging();
					this._CharityRequirementId = value;
					this.SendPropertyChanged("CharityRequirementId");
					this.OnCharityRequirementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnologyId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TechnologyId
		{
			get
			{
				return this._TechnologyId;
			}
			set
			{
				if ((this._TechnologyId != value))
				{
					if (this._Technology.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnologyIdChanging(value);
					this.SendPropertyChanging();
					this._TechnologyId = value;
					this.SendPropertyChanged("TechnologyId");
					this.OnTechnologyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technology_CharityRequirementTechnologiesUsed", Storage="_Technology", ThisKey="TechnologyId", OtherKey="TechnologyID", IsForeignKey=true)]
		public Technology Technology
		{
			get
			{
				return this._Technology.Entity;
			}
			set
			{
				Technology previousValue = this._Technology.Entity;
				if (((previousValue != value) 
							|| (this._Technology.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Technology.Entity = null;
						previousValue.CharityRequirementTechnologiesUseds.Remove(this);
					}
					this._Technology.Entity = value;
					if ((value != null))
					{
						value.CharityRequirementTechnologiesUseds.Add(this);
						this._TechnologyId = value.TechnologyID;
					}
					else
					{
						this._TechnologyId = default(int);
					}
					this.SendPropertyChanged("Technology");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CharityRequirement_CharityRequirementTechnologiesUsed", Storage="_CharityRequirement", ThisKey="CharityRequirementId", OtherKey="CharityRequirementId", IsForeignKey=true)]
		public CharityRequirement CharityRequirement
		{
			get
			{
				return this._CharityRequirement.Entity;
			}
			set
			{
				CharityRequirement previousValue = this._CharityRequirement.Entity;
				if (((previousValue != value) 
							|| (this._CharityRequirement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CharityRequirement.Entity = null;
						previousValue.CharityRequirementTechnologiesUseds.Remove(this);
					}
					this._CharityRequirement.Entity = value;
					if ((value != null))
					{
						value.CharityRequirementTechnologiesUseds.Add(this);
						this._CharityRequirementId = value.CharityRequirementId;
					}
					else
					{
						this._CharityRequirementId = default(int);
					}
					this.SendPropertyChanged("CharityRequirement");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExperienceLevels")]
	public partial class ExperienceLevel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ExperienceLevelID;
		
		private string _Description;
		
		private int _DisplayOrder;
		
		private EntitySet<Volunteer> _Volunteers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnExperienceLevelIDChanging(int value);
    partial void OnExperienceLevelIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public ExperienceLevel()
		{
			this._Volunteers = new EntitySet<Volunteer>(new Action<Volunteer>(this.attach_Volunteers), new Action<Volunteer>(this.detach_Volunteers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperienceLevelID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ExperienceLevelID
		{
			get
			{
				return this._ExperienceLevelID;
			}
			set
			{
				if ((this._ExperienceLevelID != value))
				{
					this.OnExperienceLevelIDChanging(value);
					this.SendPropertyChanging();
					this._ExperienceLevelID = value;
					this.SendPropertyChanged("ExperienceLevelID");
					this.OnExperienceLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienceLevel_Volunteer", Storage="_Volunteers", ThisKey="ExperienceLevelID", OtherKey="ExperienceLevelID")]
		public EntitySet<Volunteer> Volunteers
		{
			get
			{
				return this._Volunteers;
			}
			set
			{
				this._Volunteers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Volunteers(Volunteer entity)
		{
			this.SendPropertyChanging();
			entity.ExperienceLevel = this;
		}
		
		private void detach_Volunteers(Volunteer entity)
		{
			this.SendPropertyChanging();
			entity.ExperienceLevel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JobRoles")]
	public partial class JobRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _JobRoleID;
		
		private string _Description;
		
		private int _DisplayOrder;
		
		private EntitySet<VolunteerJobRole> _VolunteerJobRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJobRoleIDChanging(int value);
    partial void OnJobRoleIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public JobRole()
		{
			this._VolunteerJobRoles = new EntitySet<VolunteerJobRole>(new Action<VolunteerJobRole>(this.attach_VolunteerJobRoles), new Action<VolunteerJobRole>(this.detach_VolunteerJobRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobRoleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int JobRoleID
		{
			get
			{
				return this._JobRoleID;
			}
			set
			{
				if ((this._JobRoleID != value))
				{
					this.OnJobRoleIDChanging(value);
					this.SendPropertyChanging();
					this._JobRoleID = value;
					this.SendPropertyChanged("JobRoleID");
					this.OnJobRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobRole_VolunteerJobRole", Storage="_VolunteerJobRoles", ThisKey="JobRoleID", OtherKey="JobRoleID")]
		public EntitySet<VolunteerJobRole> VolunteerJobRoles
		{
			get
			{
				return this._VolunteerJobRoles;
			}
			set
			{
				this._VolunteerJobRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VolunteerJobRoles(VolunteerJobRole entity)
		{
			this.SendPropertyChanging();
			entity.JobRole = this;
		}
		
		private void detach_VolunteerJobRoles(VolunteerJobRole entity)
		{
			this.SendPropertyChanging();
			entity.JobRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Technologies")]
	public partial class Technology : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TechnologyID;
		
		private string _Description;
		
		private int _DisplayOrder;
		
		private EntitySet<VolunteerTechnology> _VolunteerTechnologies;
		
		private EntitySet<CharityRequirementSupportSkill> _CharityRequirementSupportSkills;
		
		private EntitySet<CharityRequirementTechnologiesUsed> _CharityRequirementTechnologiesUseds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTechnologyIDChanging(int value);
    partial void OnTechnologyIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDisplayOrderChanging(int value);
    partial void OnDisplayOrderChanged();
    #endregion
		
		public Technology()
		{
			this._VolunteerTechnologies = new EntitySet<VolunteerTechnology>(new Action<VolunteerTechnology>(this.attach_VolunteerTechnologies), new Action<VolunteerTechnology>(this.detach_VolunteerTechnologies));
			this._CharityRequirementSupportSkills = new EntitySet<CharityRequirementSupportSkill>(new Action<CharityRequirementSupportSkill>(this.attach_CharityRequirementSupportSkills), new Action<CharityRequirementSupportSkill>(this.detach_CharityRequirementSupportSkills));
			this._CharityRequirementTechnologiesUseds = new EntitySet<CharityRequirementTechnologiesUsed>(new Action<CharityRequirementTechnologiesUsed>(this.attach_CharityRequirementTechnologiesUseds), new Action<CharityRequirementTechnologiesUsed>(this.detach_CharityRequirementTechnologiesUseds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnologyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TechnologyID
		{
			get
			{
				return this._TechnologyID;
			}
			set
			{
				if ((this._TechnologyID != value))
				{
					this.OnTechnologyIDChanging(value);
					this.SendPropertyChanging();
					this._TechnologyID = value;
					this.SendPropertyChanged("TechnologyID");
					this.OnTechnologyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="Int NOT NULL")]
		public int DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technology_VolunteerTechnology", Storage="_VolunteerTechnologies", ThisKey="TechnologyID", OtherKey="TechnologyID")]
		public EntitySet<VolunteerTechnology> VolunteerTechnologies
		{
			get
			{
				return this._VolunteerTechnologies;
			}
			set
			{
				this._VolunteerTechnologies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technology_CharityRequirementSupportSkill", Storage="_CharityRequirementSupportSkills", ThisKey="TechnologyID", OtherKey="TechnologyId")]
		public EntitySet<CharityRequirementSupportSkill> CharityRequirementSupportSkills
		{
			get
			{
				return this._CharityRequirementSupportSkills;
			}
			set
			{
				this._CharityRequirementSupportSkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Technology_CharityRequirementTechnologiesUsed", Storage="_CharityRequirementTechnologiesUseds", ThisKey="TechnologyID", OtherKey="TechnologyId")]
		public EntitySet<CharityRequirementTechnologiesUsed> CharityRequirementTechnologiesUseds
		{
			get
			{
				return this._CharityRequirementTechnologiesUseds;
			}
			set
			{
				this._CharityRequirementTechnologiesUseds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VolunteerTechnologies(VolunteerTechnology entity)
		{
			this.SendPropertyChanging();
			entity.Technology = this;
		}
		
		private void detach_VolunteerTechnologies(VolunteerTechnology entity)
		{
			this.SendPropertyChanging();
			entity.Technology = null;
		}
		
		private void attach_CharityRequirementSupportSkills(CharityRequirementSupportSkill entity)
		{
			this.SendPropertyChanging();
			entity.Technology = this;
		}
		
		private void detach_CharityRequirementSupportSkills(CharityRequirementSupportSkill entity)
		{
			this.SendPropertyChanging();
			entity.Technology = null;
		}
		
		private void attach_CharityRequirementTechnologiesUseds(CharityRequirementTechnologiesUsed entity)
		{
			this.SendPropertyChanging();
			entity.Technology = this;
		}
		
		private void detach_CharityRequirementTechnologiesUseds(CharityRequirementTechnologiesUsed entity)
		{
			this.SendPropertyChanging();
			entity.Technology = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VolunteerJobRoles")]
	public partial class VolunteerJobRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VolunteerID;
		
		private int _JobRoleID;
		
		private EntityRef<JobRole> _JobRole;
		
		private EntityRef<Volunteer> _Volunteer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVolunteerIDChanging(int value);
    partial void OnVolunteerIDChanged();
    partial void OnJobRoleIDChanging(int value);
    partial void OnJobRoleIDChanged();
    #endregion
		
		public VolunteerJobRole()
		{
			this._JobRole = default(EntityRef<JobRole>);
			this._Volunteer = default(EntityRef<Volunteer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolunteerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int VolunteerID
		{
			get
			{
				return this._VolunteerID;
			}
			set
			{
				if ((this._VolunteerID != value))
				{
					if (this._Volunteer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVolunteerIDChanging(value);
					this.SendPropertyChanging();
					this._VolunteerID = value;
					this.SendPropertyChanged("VolunteerID");
					this.OnVolunteerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobRoleID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int JobRoleID
		{
			get
			{
				return this._JobRoleID;
			}
			set
			{
				if ((this._JobRoleID != value))
				{
					if (this._JobRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnJobRoleIDChanging(value);
					this.SendPropertyChanging();
					this._JobRoleID = value;
					this.SendPropertyChanged("JobRoleID");
					this.OnJobRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="JobRole_VolunteerJobRole", Storage="_JobRole", ThisKey="JobRoleID", OtherKey="JobRoleID", IsForeignKey=true)]
		public JobRole JobRole
		{
			get
			{
				return this._JobRole.Entity;
			}
			set
			{
				JobRole previousValue = this._JobRole.Entity;
				if (((previousValue != value) 
							|| (this._JobRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JobRole.Entity = null;
						previousValue.VolunteerJobRoles.Remove(this);
					}
					this._JobRole.Entity = value;
					if ((value != null))
					{
						value.VolunteerJobRoles.Add(this);
						this._JobRoleID = value.JobRoleID;
					}
					else
					{
						this._JobRoleID = default(int);
					}
					this.SendPropertyChanged("JobRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_VolunteerJobRole", Storage="_Volunteer", ThisKey="VolunteerID", OtherKey="VolunteerID", IsForeignKey=true)]
		public Volunteer Volunteer
		{
			get
			{
				return this._Volunteer.Entity;
			}
			set
			{
				Volunteer previousValue = this._Volunteer.Entity;
				if (((previousValue != value) 
							|| (this._Volunteer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Volunteer.Entity = null;
						previousValue.VolunteerJobRoles.Remove(this);
					}
					this._Volunteer.Entity = value;
					if ((value != null))
					{
						value.VolunteerJobRoles.Add(this);
						this._VolunteerID = value.VolunteerID;
					}
					else
					{
						this._VolunteerID = default(int);
					}
					this.SendPropertyChanged("Volunteer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteers")]
	public partial class Volunteer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VolunteerID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _TeamName;
		
		private string _EmailAddress;
		
		private string _PhoneNumber;
		
		private bool _Student;
		
		private string _JobDescription;
		
		private bool _HasLaptop;
		
		private bool _HasExtraLaptop;
		
		private bool _GoodGuiDesigner;
		
		private int _ExperienceLevelID;
		
		private System.Nullable<byte> _YearsOfExperience;
		
		private string _DietaryNeeds;
		
		private string _TwitterHandle;
		
		private string _Bio;
		
		private string _Comments;
		
		private EntitySet<VolunteerTechnology> _VolunteerTechnologies;
		
		private EntitySet<VolunteerJobRole> _VolunteerJobRoles;
		
		private EntityRef<ExperienceLevel> _ExperienceLevel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVolunteerIDChanging(int value);
    partial void OnVolunteerIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnTeamNameChanging(string value);
    partial void OnTeamNameChanged();
    partial void OnEmailAddressChanging(string value);
    partial void OnEmailAddressChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnStudentChanging(bool value);
    partial void OnStudentChanged();
    partial void OnJobDescriptionChanging(string value);
    partial void OnJobDescriptionChanged();
    partial void OnHasLaptopChanging(bool value);
    partial void OnHasLaptopChanged();
    partial void OnHasExtraLaptopChanging(bool value);
    partial void OnHasExtraLaptopChanged();
    partial void OnGoodGuiDesignerChanging(bool value);
    partial void OnGoodGuiDesignerChanged();
    partial void OnExperienceLevelIDChanging(int value);
    partial void OnExperienceLevelIDChanged();
    partial void OnYearsOfExperienceChanging(System.Nullable<byte> value);
    partial void OnYearsOfExperienceChanged();
    partial void OnDietaryNeedsChanging(string value);
    partial void OnDietaryNeedsChanged();
    partial void OnTwitterHandleChanging(string value);
    partial void OnTwitterHandleChanged();
    partial void OnBioChanging(string value);
    partial void OnBioChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public Volunteer()
		{
			this._VolunteerTechnologies = new EntitySet<VolunteerTechnology>(new Action<VolunteerTechnology>(this.attach_VolunteerTechnologies), new Action<VolunteerTechnology>(this.detach_VolunteerTechnologies));
			this._VolunteerJobRoles = new EntitySet<VolunteerJobRole>(new Action<VolunteerJobRole>(this.attach_VolunteerJobRoles), new Action<VolunteerJobRole>(this.detach_VolunteerJobRoles));
			this._ExperienceLevel = default(EntityRef<ExperienceLevel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolunteerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VolunteerID
		{
			get
			{
				return this._VolunteerID;
			}
			set
			{
				if ((this._VolunteerID != value))
				{
					this.OnVolunteerIDChanging(value);
					this.SendPropertyChanging();
					this._VolunteerID = value;
					this.SendPropertyChanged("VolunteerID");
					this.OnVolunteerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="VarChar(30)")]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this.OnTeamNameChanging(value);
					this.SendPropertyChanging();
					this._TeamName = value;
					this.SendPropertyChanged("TeamName");
					this.OnTeamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this.OnEmailAddressChanging(value);
					this.SendPropertyChanging();
					this._EmailAddress = value;
					this.SendPropertyChanged("EmailAddress");
					this.OnEmailAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student", DbType="Bit NOT NULL")]
		public bool Student
		{
			get
			{
				return this._Student;
			}
			set
			{
				if ((this._Student != value))
				{
					this.OnStudentChanging(value);
					this.SendPropertyChanging();
					this._Student = value;
					this.SendPropertyChanged("Student");
					this.OnStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobDescription", DbType="VarChar(100)")]
		public string JobDescription
		{
			get
			{
				return this._JobDescription;
			}
			set
			{
				if ((this._JobDescription != value))
				{
					this.OnJobDescriptionChanging(value);
					this.SendPropertyChanging();
					this._JobDescription = value;
					this.SendPropertyChanged("JobDescription");
					this.OnJobDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasLaptop", DbType="Bit NOT NULL")]
		public bool HasLaptop
		{
			get
			{
				return this._HasLaptop;
			}
			set
			{
				if ((this._HasLaptop != value))
				{
					this.OnHasLaptopChanging(value);
					this.SendPropertyChanging();
					this._HasLaptop = value;
					this.SendPropertyChanged("HasLaptop");
					this.OnHasLaptopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExtraLaptop", DbType="Bit NOT NULL")]
		public bool HasExtraLaptop
		{
			get
			{
				return this._HasExtraLaptop;
			}
			set
			{
				if ((this._HasExtraLaptop != value))
				{
					this.OnHasExtraLaptopChanging(value);
					this.SendPropertyChanging();
					this._HasExtraLaptop = value;
					this.SendPropertyChanged("HasExtraLaptop");
					this.OnHasExtraLaptopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodGuiDesigner", DbType="Bit NOT NULL")]
		public bool GoodGuiDesigner
		{
			get
			{
				return this._GoodGuiDesigner;
			}
			set
			{
				if ((this._GoodGuiDesigner != value))
				{
					this.OnGoodGuiDesignerChanging(value);
					this.SendPropertyChanging();
					this._GoodGuiDesigner = value;
					this.SendPropertyChanged("GoodGuiDesigner");
					this.OnGoodGuiDesignerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExperienceLevelID", DbType="Int NOT NULL")]
		public int ExperienceLevelID
		{
			get
			{
				return this._ExperienceLevelID;
			}
			set
			{
				if ((this._ExperienceLevelID != value))
				{
					if (this._ExperienceLevel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnExperienceLevelIDChanging(value);
					this.SendPropertyChanging();
					this._ExperienceLevelID = value;
					this.SendPropertyChanged("ExperienceLevelID");
					this.OnExperienceLevelIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearsOfExperience", DbType="TinyInt")]
		public System.Nullable<byte> YearsOfExperience
		{
			get
			{
				return this._YearsOfExperience;
			}
			set
			{
				if ((this._YearsOfExperience != value))
				{
					this.OnYearsOfExperienceChanging(value);
					this.SendPropertyChanging();
					this._YearsOfExperience = value;
					this.SendPropertyChanged("YearsOfExperience");
					this.OnYearsOfExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DietaryNeeds", DbType="VarChar(50)")]
		public string DietaryNeeds
		{
			get
			{
				return this._DietaryNeeds;
			}
			set
			{
				if ((this._DietaryNeeds != value))
				{
					this.OnDietaryNeedsChanging(value);
					this.SendPropertyChanging();
					this._DietaryNeeds = value;
					this.SendPropertyChanged("DietaryNeeds");
					this.OnDietaryNeedsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwitterHandle", DbType="VarChar(50)")]
		public string TwitterHandle
		{
			get
			{
				return this._TwitterHandle;
			}
			set
			{
				if ((this._TwitterHandle != value))
				{
					this.OnTwitterHandleChanging(value);
					this.SendPropertyChanging();
					this._TwitterHandle = value;
					this.SendPropertyChanged("TwitterHandle");
					this.OnTwitterHandleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bio", DbType="VarChar(4000)")]
		public string Bio
		{
			get
			{
				return this._Bio;
			}
			set
			{
				if ((this._Bio != value))
				{
					this.OnBioChanging(value);
					this.SendPropertyChanging();
					this._Bio = value;
					this.SendPropertyChanged("Bio");
					this.OnBioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(4000)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_VolunteerTechnology", Storage="_VolunteerTechnologies", ThisKey="VolunteerID", OtherKey="VolunteerID")]
		public EntitySet<VolunteerTechnology> VolunteerTechnologies
		{
			get
			{
				return this._VolunteerTechnologies;
			}
			set
			{
				this._VolunteerTechnologies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_VolunteerJobRole", Storage="_VolunteerJobRoles", ThisKey="VolunteerID", OtherKey="VolunteerID")]
		public EntitySet<VolunteerJobRole> VolunteerJobRoles
		{
			get
			{
				return this._VolunteerJobRoles;
			}
			set
			{
				this._VolunteerJobRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienceLevel_Volunteer", Storage="_ExperienceLevel", ThisKey="ExperienceLevelID", OtherKey="ExperienceLevelID", IsForeignKey=true)]
		public ExperienceLevel ExperienceLevel
		{
			get
			{
				return this._ExperienceLevel.Entity;
			}
			set
			{
				ExperienceLevel previousValue = this._ExperienceLevel.Entity;
				if (((previousValue != value) 
							|| (this._ExperienceLevel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExperienceLevel.Entity = null;
						previousValue.Volunteers.Remove(this);
					}
					this._ExperienceLevel.Entity = value;
					if ((value != null))
					{
						value.Volunteers.Add(this);
						this._ExperienceLevelID = value.ExperienceLevelID;
					}
					else
					{
						this._ExperienceLevelID = default(int);
					}
					this.SendPropertyChanged("ExperienceLevel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VolunteerTechnologies(VolunteerTechnology entity)
		{
			this.SendPropertyChanging();
			entity.Volunteer = this;
		}
		
		private void detach_VolunteerTechnologies(VolunteerTechnology entity)
		{
			this.SendPropertyChanging();
			entity.Volunteer = null;
		}
		
		private void attach_VolunteerJobRoles(VolunteerJobRole entity)
		{
			this.SendPropertyChanging();
			entity.Volunteer = this;
		}
		
		private void detach_VolunteerJobRoles(VolunteerJobRole entity)
		{
			this.SendPropertyChanging();
			entity.Volunteer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CharityRequirements")]
	public partial class CharityRequirement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CharityRequirementId;
		
		private string _ContactName;
		
		private string _CharityName;
		
		private string _CallInstruction;
		
		private string _BackgroundInformation;
		
		private string _WorkRequested;
		
		private string _OtherInfrastructure;
		
		private string _OtherSupportSkills;
		
		private string _PhoneNumber;
		
		private string _CurrentWebURL;
		
		private string _Email;
		
		private EntitySet<CharityRequirementSupportSkill> _CharityRequirementSupportSkills;
		
		private EntitySet<CharityRequirementTechnologiesUsed> _CharityRequirementTechnologiesUseds;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCharityRequirementIdChanging(int value);
    partial void OnCharityRequirementIdChanged();
    partial void OnContactNameChanging(string value);
    partial void OnContactNameChanged();
    partial void OnCharityNameChanging(string value);
    partial void OnCharityNameChanged();
    partial void OnCallInstructionChanging(string value);
    partial void OnCallInstructionChanged();
    partial void OnBackgroundInformationChanging(string value);
    partial void OnBackgroundInformationChanged();
    partial void OnWorkRequestedChanging(string value);
    partial void OnWorkRequestedChanged();
    partial void OnOtherInfrastructureChanging(string value);
    partial void OnOtherInfrastructureChanged();
    partial void OnOtherSupportSkillsChanging(string value);
    partial void OnOtherSupportSkillsChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnCurrentWebURLChanging(string value);
    partial void OnCurrentWebURLChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public CharityRequirement()
		{
			this._CharityRequirementSupportSkills = new EntitySet<CharityRequirementSupportSkill>(new Action<CharityRequirementSupportSkill>(this.attach_CharityRequirementSupportSkills), new Action<CharityRequirementSupportSkill>(this.detach_CharityRequirementSupportSkills));
			this._CharityRequirementTechnologiesUseds = new EntitySet<CharityRequirementTechnologiesUsed>(new Action<CharityRequirementTechnologiesUsed>(this.attach_CharityRequirementTechnologiesUseds), new Action<CharityRequirementTechnologiesUsed>(this.detach_CharityRequirementTechnologiesUseds));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharityRequirementId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CharityRequirementId
		{
			get
			{
				return this._CharityRequirementId;
			}
			set
			{
				if ((this._CharityRequirementId != value))
				{
					this.OnCharityRequirementIdChanging(value);
					this.SendPropertyChanging();
					this._CharityRequirementId = value;
					this.SendPropertyChanged("CharityRequirementId");
					this.OnCharityRequirementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ContactName
		{
			get
			{
				return this._ContactName;
			}
			set
			{
				if ((this._ContactName != value))
				{
					this.OnContactNameChanging(value);
					this.SendPropertyChanging();
					this._ContactName = value;
					this.SendPropertyChanged("ContactName");
					this.OnContactNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharityName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CharityName
		{
			get
			{
				return this._CharityName;
			}
			set
			{
				if ((this._CharityName != value))
				{
					this.OnCharityNameChanging(value);
					this.SendPropertyChanging();
					this._CharityName = value;
					this.SendPropertyChanged("CharityName");
					this.OnCharityNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallInstruction", DbType="VarChar(1000)")]
		public string CallInstruction
		{
			get
			{
				return this._CallInstruction;
			}
			set
			{
				if ((this._CallInstruction != value))
				{
					this.OnCallInstructionChanging(value);
					this.SendPropertyChanging();
					this._CallInstruction = value;
					this.SendPropertyChanged("CallInstruction");
					this.OnCallInstructionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackgroundInformation", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string BackgroundInformation
		{
			get
			{
				return this._BackgroundInformation;
			}
			set
			{
				if ((this._BackgroundInformation != value))
				{
					this.OnBackgroundInformationChanging(value);
					this.SendPropertyChanging();
					this._BackgroundInformation = value;
					this.SendPropertyChanged("BackgroundInformation");
					this.OnBackgroundInformationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkRequested", DbType="VarChar(MAX)")]
		public string WorkRequested
		{
			get
			{
				return this._WorkRequested;
			}
			set
			{
				if ((this._WorkRequested != value))
				{
					this.OnWorkRequestedChanging(value);
					this.SendPropertyChanging();
					this._WorkRequested = value;
					this.SendPropertyChanged("WorkRequested");
					this.OnWorkRequestedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherInfrastructure", DbType="VarChar(1000)")]
		public string OtherInfrastructure
		{
			get
			{
				return this._OtherInfrastructure;
			}
			set
			{
				if ((this._OtherInfrastructure != value))
				{
					this.OnOtherInfrastructureChanging(value);
					this.SendPropertyChanging();
					this._OtherInfrastructure = value;
					this.SendPropertyChanged("OtherInfrastructure");
					this.OnOtherInfrastructureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OtherSupportSkills", DbType="VarChar(1000)")]
		public string OtherSupportSkills
		{
			get
			{
				return this._OtherSupportSkills;
			}
			set
			{
				if ((this._OtherSupportSkills != value))
				{
					this.OnOtherSupportSkillsChanging(value);
					this.SendPropertyChanging();
					this._OtherSupportSkills = value;
					this.SendPropertyChanged("OtherSupportSkills");
					this.OnOtherSupportSkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentWebURL", DbType="VarChar(256)")]
		public string CurrentWebURL
		{
			get
			{
				return this._CurrentWebURL;
			}
			set
			{
				if ((this._CurrentWebURL != value))
				{
					this.OnCurrentWebURLChanging(value);
					this.SendPropertyChanging();
					this._CurrentWebURL = value;
					this.SendPropertyChanged("CurrentWebURL");
					this.OnCurrentWebURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CharityRequirement_CharityRequirementSupportSkill", Storage="_CharityRequirementSupportSkills", ThisKey="CharityRequirementId", OtherKey="CharityRequirementId")]
		public EntitySet<CharityRequirementSupportSkill> CharityRequirementSupportSkills
		{
			get
			{
				return this._CharityRequirementSupportSkills;
			}
			set
			{
				this._CharityRequirementSupportSkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CharityRequirement_CharityRequirementTechnologiesUsed", Storage="_CharityRequirementTechnologiesUseds", ThisKey="CharityRequirementId", OtherKey="CharityRequirementId")]
		public EntitySet<CharityRequirementTechnologiesUsed> CharityRequirementTechnologiesUseds
		{
			get
			{
				return this._CharityRequirementTechnologiesUseds;
			}
			set
			{
				this._CharityRequirementTechnologiesUseds.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CharityRequirementSupportSkills(CharityRequirementSupportSkill entity)
		{
			this.SendPropertyChanging();
			entity.CharityRequirement = this;
		}
		
		private void detach_CharityRequirementSupportSkills(CharityRequirementSupportSkill entity)
		{
			this.SendPropertyChanging();
			entity.CharityRequirement = null;
		}
		
		private void attach_CharityRequirementTechnologiesUseds(CharityRequirementTechnologiesUsed entity)
		{
			this.SendPropertyChanging();
			entity.CharityRequirement = this;
		}
		
		private void detach_CharityRequirementTechnologiesUseds(CharityRequirementTechnologiesUsed entity)
		{
			this.SendPropertyChanging();
			entity.CharityRequirement = null;
		}
	}
}
#pragma warning restore 1591
